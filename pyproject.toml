[tool.poetry]
name = "django-getpaid"
version = "2.1.0-pre.1"
description = "Multi-broker payment processor for Django."
authors = ["Dominik Kozaczko <dominik@kozaczko.info>"]
license = "MIT"
readme = "README.rst"
documentation = "https://django-getpaid.readthedocs.io/"
repository = "https://github.com/django-getpaid/django-getpaid"
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Django",
    "Framework :: Django :: 2.2",
    "Framework :: Django :: 3.0",
    "Topic :: Office/Business :: Financial",
    "Topic :: Office/Business :: Financial :: Point-Of-Sale"
]
packages = [
    { include = "getpaid" }
]

[tool.poetry.dependencies]
python = "^3.6"
django-model-utils = "^4.0.0"
pendulum = "^2.0.5"
#django = "~2.2 || ~3.0"
swapper = "^1.1.2"
django-fsm = "^2.7.0"
typing-extensions = "^3.7.4"

[tool.poetry.dev-dependencies]
tox = "^3.14.5"
factory-boy = "^2.12.0"
ipdb = "^0.13.1"
pre-commit = "^2.1.1"
pytest = {version = "^5.3.5", optional=true, extras = ["test"]}
codecov = {version="^2.0.16", optional=true, extras = ["test"]}
coverage = {version="^5.0.3", optional=true, extras = ["test"]}
requests = {version = "^2.23.0", optional = true, extras = ["test"]}
requests-mock = {version="^1.7.0", optional=true, extras = ["test"]}
pytest-cov = {version = "^2.8.1", optional = true, extras = ["test"]}
pytest-django = {version = "^3.8.0", optional = true, extras = ["test"]}
sphinx = {version = "^3", optional = true, extras = ["docs"]}
sphinx-rtd-theme = {version = "^0.4.3", optional = true, extras = ["docs"]}
black = "^19.10b0"
isort = "^4.3.21"
graphviz = {version = "^0.13.2", optional = true, extras = ["graph"]}
pytest-factoryboy = {version = "^2.0.3", optional = true, extras = ["test"]}
readme-renderer = "^25.0"
monkeytype = "^20.4.2"

[tool.poetry.extras]
docs = ["sphinx", "sphinx-rtd-theme"]
graph = ["graphviz"]
test = ["pytest", "codecov", "coverage", "request-mock", "pytest-cov", "pytest-django", "requests", "pytest-factoryboy"]

[tool.black]
line-length = 88
target-version = ['py36']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.cache
    | \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.tox
    | \.venv
    | __pycache__
    | _build
    | buck-out
    | build
    | dist
    | docs
    | migrations
  )/

)
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
line_length = 88
known_first_party = ["getpaid"]
known_third_party = ["django", "django_fsm", "factory", "orders", "paywall", "pytest", "pytest_factoryboy", "requests", "swapper", "typing_extensions"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
